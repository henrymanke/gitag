name: Release to PyPI

# Trigger workflow on:
# - completion of the Auto Tag workflow
# - push of a tag matching v* (e.g. v1.0.0)
# - creation of a GitHub Release
on:
  workflow_run:
    workflows: ["Auto Tag"]
    types:
      - completed
  push:
    tags:
      - "v*"
  release:
    types: [created]

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest

    # Only run after a successful Auto Tag or on tag push/release
    if: |
      github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' ||
      github.event_name == 'push' ||
      github.event_name == 'release'

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # ensures full history and tags are available

      - name: Fetch all tags
        run: git fetch --tags --prune

      - name: Extract latest tag as version
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "TAG_REF=${TAG#v}" >> $GITHUB_ENV

      - name: Update version in pyproject.toml
        run: |
          sed -i "s/^version = \".*\"/version = \"${TAG_REF}\"/" pyproject.toml

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build distributions
        run: |
          python -m build --sdist --wheel

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
